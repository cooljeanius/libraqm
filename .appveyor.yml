---

os:
  - Visual Studio 2015

install:
  - set PATH=C:\msys64\usr\bin;C:\msys64\mingw64\bin;%PATH%
  - appveyor DownloadFile "https://raw.githubusercontent.com/swig/cccl/master/cccl"
  - call "%VS140COMNTOOLS%\..\..\VC\vcvarsall.bat" %PLATFORM%
  - cmd: bash -cvx "if test ! -e /etc/pacman.conf && test -e .ci/etc/pacman.conf && test -w /etc; then cp -v .ci/etc/pacman.conf /etc/pacman.conf; elif test -r /etc/pacman.conf; then stat /etc/pacman.conf; fi"
  - cmd: bash -cvx "if (appveyor-retry true 2>/dev/null || test -x \"$(which appveyor-retry 2>/dev/null)\") && test -x \"$(which pacman)\" && test -n \"$(ls m*.db*)\"; then (appveyor-retry pacman -Syuu --needed --noconfirm --noprogressbar --ask=127) && (appveyor-retry pacman -S --noconfirm autoconf automake libtool gtk-doc mingw-w64-x86_64-pkg-config mingw-w64-x86_64-harfbuzz mingw-w64-x86_64-fribidi mingw-w64-x86_64-freetype); elif test -x \"$(which pacman)\"; then stat \"$(which pacman)\"; else echo \"which pacman says $(which pacman)\"; fi"
  - cmd: bash -cvx "if test -x \"$(which pacman)\" && test -n \"$(ls m*.db* 2>/dev/null)\"; then pacman -Syuu --needed --noconfirm --noprogressbar --ask=127 && pacman -S --noconfirm autoconf automake libtool gtk-doc mingw-w64-x86_64-pkg-config mingw-w64-x86_64-harfbuzz mingw-w64-x86_64-fribidi mingw-w64-x86_64-freetype; elif test -x \"$(which pacman)\"; then (pacman --help || pacman --version); else (pwd && ls); fi"
  - cmd: bash -cvx "if (appveyor-retry true 2>/dev/null || test -x \"$(which appveyor-retry 2>/dev/null)\") && test -x \"$(which vcpkg)\"; then (vcpkg update && vcpkg upgrade && (appveyor-retry vcpkg install gtk) && vcpkg install gtk3 && vcpkg install gtkmm); elif test -x \"$(which vcpkg)\"; then stat \"$(which vcpkg)\"; else echo \"which vcpkg says $(which vcpkg)\"; fi"
  - cmd: bash -cvx "if test -x \"$(which vcpkg)\"; then (vcpkg update && vcpkg upgrade && (vcpkg install gtkmm || vcpkg install gtk || vcpkg install atk || vcpkg install gdk-pixbuf || vcpkg install harfbuzz || vcpkg install bzip2) && vcpkg install fribidi && (vcpkg install freetype-gl || vcpkg install freetype || vcpkg install libpng || (yes | vcpkg contact --survey)) && (vcpkg install libxft || vcpkg install ftgl || vcpkg install pkgconf || vcpkg install xcb-util-m4 || vcpkg list)); fi"
  - cmd: bash -cvx "if test -x \"$(which scoop 2>/dev/null)\"; then (scoop bucket add extras && scoop install extras/gtk-sharp); fi"
  - cmd: bash -cvx "if test -x \"$(which choco)\"; then (choco update || choco upgrade); (choco install gtk-runtime || choco install --pre gtk-runtime); (choco install gtksharp || choco install --pre gtksharp || choco install pygtk-all-in-one_win32_py2.7 || choco install --pre pygtk-all-in-one_win32_py2.7 || choco install gtkhash || choco install --pre gtkhash); (choco install oxygenmono || choco install --pre oxygenmono); fi"
  - cmd: refreshenv
  - cmd: bash -cvx "if test -x \"$(which winget 2>/dev/null)\"; then winget install -e --id Mono.gtksharp; fi"
  - cmd: bash -cvx "if test -x \"$(which nuget)\"; then nuget install freetype; elif test -x \"$(which dotnet)\"; then dotnet add package freetype; fi"
  - cmd: bash -cvx "pwd && sleep 1"
    # Install FreeType
  - ps: Start-FileDownload 'http://download.savannah.gnu.org/releases/freetype/freetype-2.7.tar.gz' -FileName 'freetype-2.7.tar.gz'
  - 7z x freetype-2.7.tar.gz > NUL
  - 7z x freetype-2.7.tar -oc:\src\lib > NUL
  - cmd: bash -cvx "if test -z \"${OLDPWD}\"; then export OLDPWD=\"`pwd`\"; fi"
  - cd c:\src\lib\freetype-2.7\builds\windows\vc2010
  - '"C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\devenv.com"  freetype.sln /upgrade'
  - msbuild freetype.sln /p:Configuration=Release /p:Platform="Win32"
  - bash -cvx "env | sort | uniq"
  - cd "${OLDPWD}" || cd C:\projects\libraqm || bash -cvx "cd \"${OLDPWD}\""

build_script:
  - set CC=cccl
  - set CXX=cccl
  - set LD=cccl
  - set PATH=C:\msys64\usr\bin;C:\msys64\mingw64\bin;%PATH%
  - call "%VS140COMNTOOLS%\..\..\VC\vcvarsall.bat" %PLATFORM%
  - set PKG_CONFIG_PATH=%PKG_CONFIG_PATH%:.
  - bash -cvx "cp -v cccl /usr/bin"
  - bash -cvx "if test -n \"${PKG_CONFIG_PATH}\"; then for pkcdir in /mingw32/lib/pkgconfig /mingw64/lib/pkgconfig /msys64/usr/lib/pkgconfig /msys64/mingw64/lib/pkgconfig /usr/lib/pkgconfig /usr/local/lib/pkgconfig /opt/X11/lib /opt/local/lib /opt/sw/lib; do if test -d \"${pkcdir}\"; then export PKG_CONFIG_PATH=\"${PKG_PATH_CONFIG}:${pkcdir}\"; elif test -d \"C:${pkcdir}\"; then export PKG_CONFIG_PATH=\"${PKG_PATH_CONFIG}:C:${pkcdir}\"; elif test -x \"$(which cygpath)\" && test -d \"$(cygpath ${pkcdir})\"; then export PKG_CONFIG_PATH=\"${PKG_PATH_CONFIG}:$(cygpath ${pkcdir})\"; else echo \"skipping adding ${pkcdir} to PKG_CONFIG_PATH\"; fi; done; fi"
  - bash -cvx "sleep 1"
  - bash -cvx "if test -n \"${PKG_CONFIG_PATH}\"; then echo \"PKG_CONFIG_PATH is ${PKG_CONFIG_PATH}\"; else echo \"PKG_CONFIG_PATH is unset.\"; fi"
  - bash -cvx "exec 0</dev/null; (./autogen.sh || (if test -x \"$(which locate)\"; then locate gtkdocize; fi) || (if test -x \"$(which find)\" && test -r /; then find / -name gtkdocize -print 2>/dev/null; fi) || (autoreconf -fvi -Wall);)"
  - bash -cvx "exec 0</dev/null; (./configure || (if test -x \"$(which locate)\"; then locate freetype2.pc; fi) || (if test -x \"$(which find)\" && test -r /; then find / -name freetype2.pc -print 2>/dev/null; fi) || (cat config.log | grep -i \"error:\");)"
  - bash -cvx "exec 0</dev/null; make CFLAGS='/W4 /WX /wd4068'"

test_script:
  - bash -cvx "make check || (cat \"$(find . -name '*.log')\" && stat Makefile)"

# disable automatic tests
test: off
